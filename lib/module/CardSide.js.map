{"version":3,"sources":["CardSide.tsx"],"names":["React","View","Animated","StyleSheet","CardSideEnum","FRONT","BACK","styles","create","sideWrapper","width","height","position","backgroundColor","borderRadius","container","padding","CardSide","children","style","background","props","SideBackground","useCallback","child","cloneElement"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,cAA3C;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,MAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAX,CAAkB;AAC/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,MADI;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,QAAQ,EAAE,UAHC;AAIXC,IAAAA,eAAe,EAAE,SAJN;AAKXC,IAAAA,YAAY,EAAE;AALH,GADkB;AAQ/BC,EAAAA,SAAS,EAAE;AACTH,IAAAA,QAAQ,EAAE,UADD;AAETF,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITK,IAAAA,OAAO,EAAE;AAJA;AARoB,CAAlB,CAAf;;AAgBA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,QADgB;AAEhBC,EAAAA,KAAK,GAAG,EAFQ;AAGhBC,EAAAA,UAAU,GAAG,SAHG;AAIhB,KAAGC;AAJa,CAAD,KAKN;AACT,QAAMC,cAAc,GAAGtB,KAAK,CAACuB,WAAN,CACrB,CAAC;AAAEL,IAAAA,QAAQ,EAAEM;AAAZ,GAAD,KAAyB;AACvB,WAAO,OAAOJ,UAAP,KAAsB,QAAtB,gBACL,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEN,QAAAA,YAAY,EAAE,CAAhB;AAAmBD,QAAAA,eAAe,EAAEO;AAApC;AAAb,OACGI,KADH,CADK,gBAKLxB,KAAK,CAACyB,YAAN,CAAmBL,UAAnB,EAA+B;AAAEF,MAAAA,QAAQ,EAAEM;AAAZ,KAA/B,CALF;AAOD,GAToB,EAUrB,CAACJ,UAAD,CAVqB,CAAvB;AAaA,sBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACb,MAAM,CAACE,WAAR,EAAqB,GAAGU,KAAxB;AAAtB,KAA0DE,KAA1D,gBACE,oBAAC,cAAD,qBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACQ;AAApB,KAAgCG,QAAhC,CADF,CADF,CADF;AAOD,CA1BD;;AA6BA,eAAeD,QAAf","sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport { View, Animated, StyleSheet } from 'react-native';\n\nexport const CardSideEnum = {\n  FRONT: 'FRONT',\n  BACK: 'BACK',\n};\n\nconst styles = StyleSheet.create({\n  sideWrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: '#f1f1f1',\n    borderRadius: 9,\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    padding: 16,\n  },\n});\n\nconst CardSide = ({\n  children,\n  style = [],\n  background = '#612F74',\n  ...props\n}: any) => {\n  const SideBackground = React.useCallback(\n    ({ children: child }) => {\n      return typeof background === 'string' ? (\n        <View style={{ borderRadius: 9, backgroundColor: background }}>\n          {child}\n        </View>\n      ) : (\n        React.cloneElement(background, { children: child })\n      );\n    },\n    [background]\n  );\n\n  return (\n    <Animated.View style={[styles.sideWrapper, ...style]} {...props}>\n      <SideBackground>\n        <View style={styles.container}>{children}</View>\n      </SideBackground>\n    </Animated.View>\n  );\n};\n\n\nexport default CardSide;\n"]}