{"version":3,"sources":["CreditCard.js"],"names":["React","yup","View","Text","StyleSheet","Image","Animated","TouchableOpacity","TouchableWithoutFeedback","Keyboard","PixelRatio","Platform","cardValidator","Animatable","CardSide","CardSideEnum","CardInput","validationSchema","object","shape","holder","string","defined","test","holderName","runtime","options","context","isPotentiallyValid","isValid","cardholderName","number","cardNumber","expiration","expirationDate","cvv","Images","chip","require","brands","default","visa","icons","rotate","defaultCardConfig","numberMask","cvvMask","brandImage","brandName","CreditCard","forwardRef","placeholders","labels","background","textColor","errorTextColor","placeholderTextColor","initialValues","expirationDateFormat","onValidStateChange","ref","cardData","setCardData","useState","activeSide","setActiveSide","FRONT","cardConfig","setCardConfig","errors","setErrors","frontOpacityRef","useRef","Value","current","backOpacityRef","rotationValue","numberInputRef","holderInputRef","expirationInputRef","cvvInputRef","cardDataIsValid","textStyle","color","useCallback","fadeAnimationConfig","appearing","toValue","duration","useNativeDriver","rotateAnimationConfig","isAppearing","isFrontActive","parallel","timing","start","newActiveSide","BACK","expirationMask","validateField","name","value","values","response","isPontentiallyValid","error","validateSyncAt","validationError","prev","loadCardConfig","card","type","code","size","gaps","lengths","niceType","brand","maxLength","Math","max","maskChars","padStart","split","i","length","splice","join","handleInputChange","text","focusField","getSideStyle","side","outputRange","transform","scaleX","interpolate","inputRange","opacity","zIndex","field","focus","submit","data","validateSync","abortEarly","err","useEffect","undefined","validationErrors","useImperativeHandle","createElement","onPress","dismiss","style","styles","cardWrapper","header","source","animation","textData","imageChip","onChange","autoFocus","placeholder","textCardNumber","autocompleteType","textContentType","maskProps","mask","refInput","returnKeyType","autoCorrect","onSubmitEditing","blurOnSubmit","footer","holderWrapper","textLabel","autoCapitalize","expirationWrapper","keyboardType","strip","cvvWrapper","pointerEvents","onBlur","defaultProps","create","height","maxHeight","position","width","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderRadius","justifyContent","alignItems","resizeMode","flexDirection","marginBottom","fontSize","getFontScale","textTransform","fontWeight","marginTop","OS","marginLeft","letterSpacing","backgroundColor","left","right","bottom","flex","marginRight"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable global-require */\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  Animated,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  PixelRatio,\n  Platform,\n} from 'react-native';\n// import CreditCardType from 'credit-card-type';\nimport cardValidator from 'card-validator';\nimport * as Animatable from 'react-native-animatable';\nimport CardSide, { CardSideEnum } from './CardSide';\nimport CardInput from './CardInput';\nconst validationSchema = yup.object().shape({\n  holder: yup\n    .string()\n    .defined()\n    .test('is-valid-holder', 'Holder name is invalid', function (holderName) {\n      const { runtime = false } = this.options.context;\n      const { isPotentiallyValid, isValid } = cardValidator.cardholderName(\n        holderName\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  number: yup\n    .string()\n    .defined()\n    .test('is-valid-card-number', 'Card number is invalid', function (\n      cardNumber\n    ) {\n      const { runtime = false } = this.options.context;\n      const { isPotentiallyValid, isValid } = cardValidator.number(cardNumber);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  expiration: yup\n    .string()\n    .defined()\n    .test('is-valid-expiration', 'Card expiration is invalid', function (\n      expiration\n    ) {\n      const { runtime = false } = this.options.context;\n      const { isPotentiallyValid, isValid } = cardValidator.expirationDate(\n        expiration\n      );\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n  cvv: yup\n    .string()\n    .defined()\n    .test('is-valid-cvv', 'Card CVV is invalid', function (cvv) {\n      const { runtime = false } = this.options.context;\n      const { isPotentiallyValid, isValid } = cardValidator.cvv(cvv);\n      return runtime ? isPotentiallyValid : isValid;\n    }),\n});\nconst Images = {\n  chip: require('./images/chip.png'),\n  brands: {\n    default: '',\n    visa: require('./images/brands/visa.png'),\n  },\n  icons: {\n    rotate: require('./images/icons/rotate.png'),\n  },\n};\nconst defaultCardConfig = {\n  numberMask: '9999 9999 9999 9999',\n  cvvMask: '999',\n  brandImage: Images.brands.default,\n  brandName: '',\n};\nconst CreditCard = React.forwardRef(\n  (\n    {\n      placeholders,\n      labels,\n      background,\n      textColor,\n      errorTextColor,\n      placeholderTextColor,\n      initialValues,\n      expirationDateFormat,\n      onValidStateChange,\n    },\n    ref\n  ) => {\n    /** States */\n    const [cardData, setCardData] = React.useState(initialValues);\n    const [activeSide, setActiveSide] = React.useState(CardSideEnum.FRONT);\n    const [cardConfig, setCardConfig] = React.useState(defaultCardConfig);\n    const [errors, setErrors] = React.useState({\n      number: false,\n      holder: false,\n      expiration: false,\n      cvv: false,\n    });\n    /** Animations Refs */\n    const frontOpacityRef = React.useRef(new Animated.Value(1)).current;\n    const backOpacityRef = React.useRef(new Animated.Value(0)).current;\n    const rotationValue = React.useRef(new Animated.Value(0)).current;\n    /** Input Refs */\n    const numberInputRef = React.useRef(null);\n    const holderInputRef = React.useRef(null);\n    const expirationInputRef = React.useRef(null);\n    const cvvInputRef = React.useRef(null);\n    /** Other refs */\n    const cardDataIsValid = React.useRef(false);\n    /** Runtime Styles */\n    const textStyle = { color: textColor };\n    /** Animate Card (Rotate) */\n    const rotate = React.useCallback(() => {\n      const fadeAnimationConfig = (appearing) => ({\n        toValue: appearing ? 1 : 0,\n        duration: 200,\n        useNativeDriver: true,\n      });\n      const rotateAnimationConfig = (isAppearing) => ({\n        toValue: isAppearing ? 1 : 0,\n        duration: 400,\n        useNativeDriver: true,\n      });\n      const isFrontActive = activeSide === CardSideEnum.FRONT;\n      Animated.parallel([\n        Animated.timing(frontOpacityRef, fadeAnimationConfig(!isFrontActive)),\n        Animated.timing(backOpacityRef, fadeAnimationConfig(isFrontActive)),\n        Animated.timing(rotationValue, rotateAnimationConfig(isFrontActive)),\n      ]).start(() => {\n        const newActiveSide = isFrontActive\n          ? CardSideEnum.BACK\n          : CardSideEnum.FRONT;\n        setActiveSide(newActiveSide);\n      });\n    }, [activeSide, backOpacityRef, frontOpacityRef, rotationValue]);\n    const expirationMask =\n      expirationDateFormat === 'MM/YY' ? '99/99' : '99/9999';\n    const validateField = React.useCallback((name, value) => {\n      const values = { [name]: value };\n      const response = {\n        isPontentiallyValid: false,\n        isValid: false,\n        error: null,\n      };\n      try {\n        // Check potentially invalid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: true },\n        });\n        response.isPontentiallyValid = true;\n        // Check if is valid... If has error, it is throwed...\n        validationSchema.validateSyncAt(name, values, {\n          context: { runtime: false },\n        });\n        response.isValid = true;\n      } catch (validationError) {\n        setErrors((prev) => ({\n          ...prev,\n          [name]: response.isPontentiallyValid ? false : validationError,\n        }));\n      }\n      return response;\n    }, []);\n    const loadCardConfig = (cardNumber) => {\n      const { card = null } = cardValidator.number(cardNumber);\n      if (!card) {\n        setCardConfig({ ...defaultCardConfig });\n        return;\n      }\n      const {\n        type = '',\n        code = { size: 0 },\n        gaps = [],\n        lengths = [],\n        niceType = '',\n      } = card;\n      setCardData((prev) => ({\n        ...prev,\n        brand: type,\n      }));\n      setCardConfig((prev) => {\n        const maxLength = Math.max(...lengths);\n        const maskChars = ''.padStart(maxLength, '9').split('');\n        for (let i = 0; i < gaps.length; i += 1) {\n          maskChars.splice(gaps[i] + i, 0, ' ');\n        }\n        const numberMask = maskChars.join('');\n        const cvvMask = ''.padStart(code.size, '9');\n        const brandImage = Images.brands[type]\n          ? Images.brands[type]\n          : Images.brands.default;\n        return {\n          ...prev,\n          numberMask,\n          cvvMask,\n          brandImage,\n          brandName: niceType,\n        };\n      });\n    };\n    const handleInputChange = React.useCallback(\n      (name, text) => {\n        setCardData((prev) => ({ ...prev, [name]: text }));\n        const { isValid } = validateField(name, text);\n        if (name === 'number') {\n          loadCardConfig(text);\n          if (isValid) {\n            focusField(holderInputRef);\n          }\n        } else if (\n          name === 'expiration' &&\n          isValid &&\n          text.length === expirationMask.length\n        ) {\n          focusField(cvvInputRef);\n          rotate();\n        }\n      },\n      [validateField, rotate, expirationMask]\n    );\n    const getSideStyle = React.useCallback(\n      (side) => {\n        const outputRange = side === CardSideEnum.FRONT ? [1, -1] : [-1, 1];\n        return {\n          transform: [\n            {\n              scaleX: rotationValue.interpolate({\n                inputRange: [0, 1],\n                outputRange,\n              }),\n            },\n          ],\n          opacity:\n            side === CardSideEnum.FRONT ? frontOpacityRef : backOpacityRef,\n          zIndex: side === activeSide ? 1 : 0,\n        };\n      },\n      [activeSide, backOpacityRef, frontOpacityRef, rotationValue]\n    );\n    const focusField = (field) => {\n      if (!field || !field.current) return;\n      field.current.focus();\n    };\n    const submit = React.useCallback(() => {\n      const response = {\n        error: null,\n        data: cardData,\n      };\n      try {\n        validationSchema.validateSync(cardData, {\n          context: { runtime: false },\n          abortEarly: false,\n        });\n      } catch (err) {\n        response.error = err;\n      }\n      return response;\n    }, [cardData]);\n    React.useEffect(() => {\n      if (cardDataIsValid.current !== undefined) {\n        try {\n          validationSchema.validateSync(cardData, {\n            context: { runtime: false },\n          });\n          onValidStateChange(true);\n        } catch (validationErrors) {\n          onValidStateChange(false, validationErrors);\n        }\n      }\n    }, [cardData, onValidStateChange]);\n    React.useImperativeHandle(ref, () => ({ submit }));\n    return React.createElement(\n      TouchableWithoutFeedback,\n      { onPress: Keyboard.dismiss },\n      React.createElement(\n        View,\n        { style: styles.cardWrapper },\n        React.createElement(\n          CardSide,\n          {\n            background: background,\n            style: [[getSideStyle(CardSideEnum.FRONT)]],\n          },\n          React.createElement(\n            View,\n            { style: styles.header },\n            React.createElement(\n              TouchableOpacity,\n              { onPress: rotate },\n              React.createElement(Image, { source: Images.icons.rotate })\n            ),\n            !!cardConfig.brandImage &&\n              React.createElement(Animatable.Image, {\n                source: cardConfig.brandImage,\n                animation: 'slideInRight',\n                duration: 400,\n                useNativeDriver: true,\n              }),\n            !!(!cardConfig.brandImage && cardConfig.brandName) &&\n              React.createElement(\n                Animatable.Text,\n                {\n                  style: [styles.textData, textStyle],\n                  animation: 'slideInRight',\n                  duration: 400,\n                },\n                cardConfig.brandName\n              )\n          ),\n          React.createElement(Image, {\n            source: Images.chip,\n            style: styles.imageChip,\n          }),\n          React.createElement(\n            View,\n            null,\n            React.createElement(CardInput, {\n              placeholderTextColor: placeholderTextColor,\n              name: 'number',\n              onChange: handleInputChange,\n              value: cardData?.number,\n              autoFocus: true,\n              placeholder: placeholders.number,\n              style: [\n                styles.textCardNumber,\n                { color: errors.number ? errorTextColor : textColor },\n              ],\n              maxLength: cardConfig.numberMask.length,\n              autocompleteType: 'cc-number',\n              textContentType: 'creditCardNumber',\n              maskProps: {\n                type: 'custom',\n                options: { mask: cardConfig.numberMask },\n              },\n              refInput: numberInputRef,\n              returnKeyType: 'next',\n              autoCorrect: false,\n              onSubmitEditing: () => focusField(holderInputRef),\n              blurOnSubmit: false,\n            })\n          ),\n          React.createElement(\n            View,\n            { style: styles.footer },\n            React.createElement(\n              View,\n              { style: styles.holderWrapper },\n              React.createElement(\n                Text,\n                { style: [styles.textLabel, textStyle] },\n                labels.holder\n              ),\n              React.createElement(CardInput, {\n                placeholderTextColor: placeholderTextColor,\n                name: 'holder',\n                autocompleteType: 'name',\n                textContentType: 'name',\n                returnKeyType: 'next',\n                onChange: handleInputChange,\n                placeholder: placeholders.holder,\n                autoCapitalize: 'characters',\n                style: [\n                  styles.textData,\n                  { color: errors.holder ? errorTextColor : textColor },\n                ],\n                value: cardData?.holder,\n                refInput: holderInputRef,\n                onSubmitEditing: () => focusField(expirationInputRef),\n                blurOnSubmit: false,\n              })\n            ),\n            React.createElement(\n              View,\n              { style: styles.expirationWrapper },\n              React.createElement(\n                Text,\n                { style: [styles.textLabel, textStyle] },\n                labels.expiration\n              ),\n              React.createElement(CardInput, {\n                placeholderTextColor: placeholderTextColor,\n                name: 'expiration',\n                autocompleteType: 'cc-exp',\n                keyboardType: 'numbers-and-punctuation',\n                returnKeyType: 'next',\n                onChange: handleInputChange,\n                placeholder: placeholders.expiration,\n                style: [\n                  styles.textData,\n                  {\n                    color:\n                      errors.expiration &&\n                      cardData.expiration.length === expirationMask.length\n                        ? errorTextColor\n                        : textColor,\n                  },\n                ],\n                value: cardData?.expiration,\n                maxLength: 7,\n                maskProps: {\n                  type: 'custom',\n                  options: { mask: expirationMask },\n                },\n                refInput: expirationInputRef,\n                onSubmitEditing: () => {\n                  focusField(cvvInputRef);\n                  rotate();\n                },\n                blurOnSubmit: false,\n              })\n            )\n          )\n        ),\n        React.createElement(\n          CardSide,\n          { style: [getSideStyle(CardSideEnum.BACK)], background: background },\n          React.createElement(View, { style: styles.strip }),\n          React.createElement(\n            TouchableOpacity,\n            { onPress: rotate },\n            React.createElement(Image, { source: Images.icons.rotate })\n          ),\n          React.createElement(\n            View,\n            { style: styles.cvvWrapper, pointerEvents: 'box-none' },\n            React.createElement(\n              Text,\n              { style: [styles.textLabel, textStyle] },\n              labels.cvv\n            ),\n            React.createElement(CardInput, {\n              placeholderTextColor: placeholderTextColor,\n              name: 'cvv',\n              autocompleteType: 'cc-csc',\n              keyboardType: 'numeric',\n              returnKeyType: 'done',\n              onChange: handleInputChange,\n              placeholder: placeholders.cvv,\n              style: [\n                styles.textData,\n                { color: errors.cvv ? errorTextColor : textColor },\n              ],\n              value: cardData?.cvv,\n              maxLength: cardConfig.cvvMask.length,\n              maskProps: {\n                type: 'custom',\n                options: { mask: cardConfig.cvvMask },\n              },\n              onBlur: rotate,\n              refInput: cvvInputRef,\n            })\n          )\n        )\n      )\n    );\n  }\n);\nCreditCard.defaultProps = {\n  placeholders: {\n    number: '0000 0000 0000 0000',\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'MM/YYYY',\n    cvv: '000',\n  },\n  labels: {\n    holder: 'TITULAR DO CARTÃO',\n    expiration: 'VENCIMENTO',\n    cvv: 'CÓD. SEGURANÇA',\n  },\n  expirationDateFormat: 'MM/YYYY',\n  textColor: '#FFFFFF',\n  placeholderTextColor: '#9B84A9',\n  initialValues: {\n    number: '',\n    holder: '',\n    expiration: '',\n    cvv: '',\n    brand: '',\n  },\n  errorTextColor: '#F15A5B',\n  onValidStateChange: () => {},\n};\nconst styles = StyleSheet.create({\n  cardWrapper: {\n    height: '100%',\n    maxHeight: 220,\n    position: 'relative',\n    width: '100%',\n    maxWidth: 350,\n    shadowColor: 'rgba(0,0,0,0.6)',\n    shadowOffset: {\n      width: 0,\n      height: 6,\n    },\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    borderRadius: 6,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  background: {\n    resizeMode: 'cover',\n    width: '100%',\n    height: '100%',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  textLabel: {\n    fontSize: 10 / PixelRatio.getFontScale(),\n    textTransform: 'uppercase',\n  },\n  textData: {\n    fontWeight: 'bold',\n    fontSize: 16 / PixelRatio.getFontScale(),\n    marginTop: Platform.OS == 'android' ? -10 : undefined,\n    marginLeft: Platform.OS == 'android' ? -4 : undefined,\n  },\n  textCardNumber: {\n    fontSize: 20 / PixelRatio.getFontScale(),\n    fontWeight: 'bold',\n    marginBottom: 8,\n    marginTop: Platform.OS == 'ios' ? 16 : 5,\n    letterSpacing: 2,\n  },\n  imageChip: {\n    marginTop: 16,\n  },\n  footer: {\n    marginTop: Platform.OS == 'ios' ? 16 : 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  strip: {\n    backgroundColor: 'rgba(0,0,0,.6)',\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    marginTop: 48,\n    height: 40,\n  },\n  cvvWrapper: {\n    height: '100%',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    bottom: 24,\n  },\n  holderWrapper: {\n    flex: 2,\n    marginRight: 16,\n  },\n  expirationWrapper: {\n    flex: 1,\n    alignItems: 'flex-end',\n  },\n});\nexport default CreditCard;\n"]}